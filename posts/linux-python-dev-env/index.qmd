---
title: "Linux Python Dev Env"
description: "Great Python dev setup."
author: "bwrob"

date: "2024-08-11"
date-modified: "2024-08-1"

categories: [Dev Env]
image: image.jpg
---

## Python setup

```{bash}
brew install python@3.12
```

Dev tools should be accessable globally, but should't be in the defualt global python env.
Solution - `pipx`


```{bash}
brew install pipx
pipx ensurepath
pipx install argcomplete --force
```

Add pipix completions to config

```{bash}
nano  .zshrc

autoload -U compinit && compinit
eval "$(register-python-argcomplete pipx)"
```
![](1.png)

Install dev tools
```{bash}
pipx install poetry poethepoet pre-commit pytest ruff basedpyright
```
![](2.png)

```{bash}
nano $(which poetry)
```
![](3.png)

Shebang Line (#!):
#!/home/bwrob/.local/share/pipx/venvs/poetry/bin/python: This line specifies the interpreter used to run the script. In this case, it's a Python interpreter located in a specific virtual environment (poetry).

This script acts as a launcher for the poetry command. It sets up the environment and handles potential script extensions before delegating the actual command execution to the poetry library.

We can see that each of the toolos install with pipx is installed in its own venv, but is available globally
```{bash}
ls /home/bwrob/.local/share/pipx/venvs/ -la
```
![](4.png)

Copy your
```{bash}
# Instal dependencies
poetry install
# Install pre-commit
pre-commit install --install-hooks --overwrite --allow-missing-config
# Update pre-commit
pre-commit autoupdate
# Run pre-commit to test setup
pre-commit run --all-files
```

## Quarto

```{bash}
wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.5.57/quarto-1.5.57-linux-amd64.tar.gz
mkdir ~/.local/share/quarto
tar -C ~/.local/share/quarto -xvzf quarto-1.5.57-linux-amd64.tar.gz
ln -s ~/.local/share/quarto/quarto-1.5.57/bin/quarto ~/.local/bin/quarto
quarto check
```
