---
title: "Linux in Windows via WSL"
description: "Great dev setup and still CS coffee break"
author: "bwrob"

date: "2024-08-11"
date-modified: "2024-08-11"

categories: [Dev setup]
image: image.jpg
---
![](image.jpg){width="95%" fig-align="center"}

## Windows, Linux, and You: A Dynamic Duo

Tired of the age-old Windows vs. Linux debate among PC superusers?
Well, get ready to toss that outdated script out the window! 
I'll show you how to get the best of both world.

### Pros and cons 

Windows OS has long been the dominant platform for consumers and businesses alike.
It offers superior hardware compatibility and gaming experiences, 
However, Windows limitations in terms of system control and software development tools have been well-documented. 

Linux, on the other hand, has carved a niche for itself as the preferred operating system for developers and system administrators. 
Providing unparalleled flexibility and a vast array of open-source tools.
But the learning curve is steep, the open-source projects often get abbandoned, and with great power (sudo) comes great responsibility.

### Bridging the gap

At this point, even Microsoft, a strong contrarian to Linux in the past, embraced the usefulness of Linux shell at your fingertips.
Imagine having the sleek, user-friendly interface of Windows for your everyday tasks.
Combine it with a the raw power and flexibility of Linux for when you need to dive deep into development or system administration. 
And limited stakes once you (inevatibly) remove half of your file system with a bash script.
Enter Windows Subsystem for Linux (WSL): a ticket to 10x-ing your Windows experience. 
Let's explore how this dynamic duo can supercharge your digital life.

###  WSL vs. Virtual Machines: What's the Difference?

You might be wondering how WSL differs from a traditional virtual machine (VM). 
While both provide a way to run Linux on Windows, they operate in fundamentally different ways. 
A VM essentially emulates a virtual computer within your computer, complete with its own operating system and hardware resources.
This makes VMs resource-intensive and can impact overall system performance. Â  
They are also hard to set up and maintain.

WSL, on the other hand, is a more lightweight approach. 
It integrates Linux directly into the Windows kernel, allowing for faster boot times, better performance, and seamless file sharing between Windows and Linux environments.
So, if you're looking for a powerful, efficient, and integrated way to harness the best of both Windows and Linux, WSL is the way to go.

## Installing and setuping WSL

First, we need to set up the WSL and install a chosen Linux distribution. 
Fortunatelly, this is super easy, bearly an inconvinience. 
You can choose from a list of distros pre-packaged by Microsoft, or download and build an image from scratch.
You can even build Arch and be legally alowed to say `BTW, I use Arch (on Windows)`.
Myself, I will go less involved route and choose Long Term Support version of Ubuntu.
Now, open the Powershell with administrative priviliges and run:

```{shell}
wsl --update
wsl --version
```
![](1.png)
```{shell}
wsl -l -o
```
![](2.png)
```{shell}
wsl --install -d 'Ubuntu-24.04'
```
![](3.png)

Reboot the Windows system and you'll see `Ubuntu' among your applications.

## Base setup

[Install homebrew](https://dikabrenda.medium.com/how-to-install-brew-on-ubuntu-20-04-lts-linux-714c73379dd4)

```{bash}
sudo apt update
sudo apt-get install build-essential git -y
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
(echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/bwrob/.zshrc
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew doctor
```

[Install zshell](https://phoenixnap.com/kb/install-zsh-ubuntu)

```{bash}
brew install zsh
zsh --version
zsh
echo $SHELL
sudo chsh -s $(which zsh)
```


## Git and github

https://cis106.com/guides/Ubuntu%20Github%20Setup/

```{bash}
brew install git gh
```

## Python setup

```{bash}
brew install python@3.12
brew install pipx
pipx ensurepath
pipx install poetry poethepoet pre-commit pytest ruff basedpyright
which poetry
poetry install
```
