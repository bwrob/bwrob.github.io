---
title: "Mathematician in finance"
description: "How to survive in the financial whirpool."
author: "bwrob"

date: "2025-03-15"
date-modified: "2025-03-15"

categories: [Career]
---

## Required skillsets
```{python}
# | echo: false
# | output: asis
# | collapse: true

from IPython.display import display, Markdown
import plotly.graph_objects as go
import yfinance as yf

job_skills = {
    "Office Quant": {
        "Programming": 2,
        "Financial Modeling": 3,
        "Quantitative Analysis": 3,
        "Data Analysis": 2,
        "Domain Knowledge": 3,
    },
    "Quant Developer": {
        "Programming": 3,
        "Software Engineering": 3,
        "Algorithm Development": 3,
        "Data Management": 2,
        "High-Performance Computing": 2,
    },
    "Market Risk Quant": {
        "Programming": 2,
        "Risk Modeling": 3,
        "Quantitative Analysis": 3,
        "Data Analysis": 3,
        "Regulatory Knowledge": 2,
    },
    "Validation Quant": {
        "Programming": 2,
        "Model Validation": 3,
        "Quantitative Analysis": 3,
        "Data Analysis": 2,
        "Regulatory Knowledge": 3,
    },
    "Quant Researcher": {
        "Programming": 3,
        "Statistical Learning": 3,
        "Quantitative Analysis": 3,
        "Data Mining": 2,
        "Mathematical Modeling": 3,
    },
    "Algorithmic Trader (Quant)": {
        "Programming": 3,
        "Quantitative Analysis": 3,
        "Market Microstructure": 3,
        "Data Management": 2,
        "Low-Latency Programming": 2,
    },
    "Credit Risk Quant": {
        "Programming": 2,
        "Credit Modeling": 3,
        "Quantitative Analysis": 3,
        "Data Analysis": 3,
        "Domain Knowledge": 2,
    },
    "Structured Products Quant": {
        "Programming": 2,
        "Financial Modeling": 3,
        "Quantitative Analysis": 3,
        "Domain Knowledge": 3,
        "Communication": 2,
    },
    "Portfolio Construction Quant": {
        "Programming": 2,
        "Optimization": 3,
        "Quantitative Analysis": 3,
        "Data Analysis": 3,
        "Risk Management": 2,
    },
}

all_skills = set()
for skills in job_skills.values():
    all_skills.update(skills.keys())
all_skills = list(all_skills)


tabs = all_skills
display(Markdown(":::{.panel-tabset}"))

for job_title, skills in job_skills.items():
    display(Markdown("\n"))
    display(Markdown("### {}".format(job_title)))
    display(Markdown("\n"))

    skill_values = [skills.get(skill, 0) for skill in all_skills]
    fig = go.Figure(
        data=[
            go.Bar(
                y=all_skills,
                x=skill_values,
                orientation="h",
            )
        ]
    )

    fig.update_layout(
        title=f"Skill Levels - {job_title}",
        xaxis_showgrid=False,
        xaxis=dict(tickmode="linear", tick0=0, dtick=1),
        width=600,
    )

    display(fig)

display(Markdown(":::"))
```
