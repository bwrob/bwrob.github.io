---
title: "Programowanie (PWr Lato 2025)"

about:
  template: marquee
---


Laboratoria komputerowe do wykładu Andrzeja Giniewicza.


## Zasady zaliczenia

Ogólne zasady zaliczenia kursu można znaleźć na [stronie kursu u wykładowcy](https://alfa.im.pwr.edu.pl/~giniew/doku.php?id=rok2425:letni:prog).

Doprecyzowania obowiazujace w moich grupach:

:::{.panel-tabset}

### Listy zadań

Conajmniej pierwsze 3 listy będziemy robić na zajęciach, w systemie deklaracyjnym. Po zajęciach proszę o przesłanie rozwiązań. Kolejne listy zadań będą w formie zadań domowych, do zrobienia i przesłania przed zajęciami. Rozwiązania będą omiawiane i wyrywkowo sprawdzane w trakcie zajęć.

Nazwa pliku z rozwiązaniami listy `x` powinna być następująca `{nr_indeksu}_lista_{x}.py`. Struktura pliku poniższa:
```{python}
# | eval: false

# Funkcje pomocnicze do zadania 1

def zadanie_1(): ...

# Funkcje pomocnicze do zadania 2

def zadanie_2(): ...

# Funkcje pomocnicze do zadania 3

def zadanie_3(): ...

if __name__ == "__main__"":
    zadanie_1()
    zadanie_2()
    zadanie_3()

```

### Projekt

Szczegóły projektu na wykładzie. Na labach będziemy omawiać problemy i pytania wyrastające przy projekcie. Można będzie konsultować decyzje projektowe i techniczne. Na ochotnika przedstawiać sprytne rozwiązania zastosowane w programie, za punkty z aktywności.

Obowiązuje jeden update w trakcie oraz prezentacja na koniec. Będziecie głosować na najciekawszy merytorycznie projekt. Ja wybiorę jeden projekt najlepszy technicznie. Oba dostaną dodatkowe punkty.

Zespoły mogą być łączone pomiędzy moimi dwoma grupami, natomiast na prezentację końcową musi pojawić się cała grupa w jednym terminie.

### Sprawozdanie

Sprawozdanie tworzone na arkuszu Excel, z wykorzystaniem VBA. Z powodów technicznych będzie robione na zajęciach.

### Aktywność

Można zdobyć maks 10 punktów z poza puli na części z list zadań i maks 10 na części projektowej.

:::

## Listy zadań

Komentarze do list zadań znajdują się [tutaj](pwr-programming-2025-list-comments.qmd)

## Polecane źródła

- Python mniej poważnie. Zabawne projekty programistyczne, które zwiększą Twoje umiejętności, *Lee Vaughan*
- Matematyka konkretna, *Graham Ronald L., Knuth Donald E., Oren Patashnik*
- Wprowadzenie do algorytmów, *Cormen Thomas H., Leiserson Charles E., Rivest Ronald L, Clifford Stein*
